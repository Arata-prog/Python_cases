import requests
import bs4

# —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Å–º–∞–π–ª–∏–∫–∞ –ø–æ —Ç–µ–∫—Å—Ç –ø–æ–≥–æ–¥—ã, –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –µ–≥–æ
def getSmile(description):
    if "–±–µ–∑ –æ—Å–∞–¥–∫–æ–≤" in description:
        if "–ø–∞—Å–º—É—Ä–Ω–æ" in description:
            return "‚òÅÔ∏è"
        if "–æ–±–ª–∞—á–Ω–æ" in description:
            return "‚õÖ"
        elif "—è—Å–Ω–æ" in description:
            return "‚òÄÔ∏è"
    elif "–¥–æ–∂–¥—å" in description:
        return "üåßÔ∏è"
    return ""

# –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–≥–æ–¥—ã –Ω–∞ —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É (–∏–∑–Ω–∞—á–∞–ª—å–Ω–æ –¥–ª—è –ú–æ—Å–∫–≤—ã)
def getWeather(url="https://pogoda7.ru/prognoz/gorod134242-Russia-g_Moskva-Moskva"):
    try:
        # –¥–ª—è –æ—Ç–≤–µ—Ç–∞
        result = ""
        # –≤—ã–ø–æ–ª–Ω—è–µ–º –∑–∞–ø—Ä–æ—Å, –ø–æ–ª—É—á–∞–µ–º –æ—Ç–≤–µ—Ç –≤ response
        response = requests.get(url)
        print("–í—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –∑–∞–ø—Ä–æ—Å... –û–∂–∏–¥–∞–π—Ç–µ...")

        # –µ—Å–ª–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç —É—Å–ø–µ—à–Ω—ã–π (—Å—Ç–∞—Ç—É—Å–Ω—ã–π –∫–æ–¥ == 200)
        if response.status_code == 200:
            # –ø–æ–ª—É—á–∞–µ–º –≤–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç
            content = bs4.BeautifulSoup(response.text, "lxml")
            # "–ø–∞—Ä—Å–∏–º" –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞ –∫–∞–∫ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç li (-1) –≤ —ç–ª–µ–º–µ–Ω—Ç–µ div —Å –∫–ª–∞—Å—Å–æ–º breadcrumb
            city = content.find("div", class_="breadcrumb").find_all("li")[-1]
            result += f"–ü–û–ì–û–î–ê –í {city.text}\n\n"

            # –ø–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ —Ç–µ–∫—É—â–µ–º –¥–Ω–µ
            currentData = content.find("div", class_="current_data").find("div", class_="precip").find_all("div")

            # —Ç–µ–∫—É—â–∞—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
            currentTemperature = currentData[0].text

            # —Å–æ–±–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–± –æ—Å–∞–¥–∫–∞—Ö (–¥–ª—è —ç—Ç–æ–≥–æ –±–µ—Ä—ë–º –≤—Å–µ div, –∫—Ä–æ–º–µ –ø–µ—Ä–≤–æ–≥–æ –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ)
            weatherType = ""
            for i in range(1, len(currentData)-1):
                weatherType += currentData[i].text.strip() + " "
            weatherType = getSmile(weatherType) + " " + weatherType

            result += f"–°–ï–ì–û–î–ù–Ø:\n{currentTemperature}\n{weatherType}\n"

            # –¥—Ä—É–≥–∏–µ –¥–Ω–∏
            # –±–µ—Ä—ë–º –≤—Å–µ –±–ª–æ–∫–∏ div —Å –∫–ª–∞—Å—Å–æ–º dayline, –Ω–∞—á–∏–Ω–∞—è —Å 1
            days = content.find_all("div", class_="dayline")[1:]

            # –¥–ª—è –¥–Ω—è day –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –¥–Ω—è—Ö days
            for day in days:
                # –ø–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É
                date = day.find("div", class_="dayweek").text.strip().split("\n")[0].upper()
                result += f"\n{date}\n"

                # –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ —á–∞—Å—Ç–∏ –¥–Ω—è day
                mainBlock = day.find_all("div", class_="table-row-time")

                # –¥–ª—è –≤—Å–µ—Ö —á–∞—Å—Ç–µ–π –¥–Ω—è (–∏—Ö –±—É–¥–µ—Ç –ø–æ 4)
                for i in range(len(mainBlock)):
                    allData = mainBlock[i].find_all("div")
                    # —á–∞—Å—Ç—å –¥–Ω—è
                    dayPartParts = allData[0].find_all("div")
                    dayPart = dayPartParts[0].text + " " + dayPartParts[1].text
                    # —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞
                    temperature = allData[3].text
                    # –æ—Å–∞–¥–∫–∏
                    weatherType = getSmile(allData[6].text) + " " + allData[6].text
                    result += dayPart + ": " + temperature + "\n" + weatherType + "\n"

            print(result)

        else:
            print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: –∫–æ–¥ {response.status_code}")

    except Exception as ex:
        print(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∑–∞–ø—Ä–æ—Å–∞: {ex}")


getWeather()

